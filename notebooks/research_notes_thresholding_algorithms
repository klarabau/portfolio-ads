{
 "cells": [
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Thresholding algorithms \n",
    "\n",
    "A thresholding algorithm finds a threshold that separates larger values from smaller ones.\n",
    "Most thresholding methods use image intensity Ii,j to determine whether a pixel turns white or black. If Ii,j is smaller than a fixed constant T, the pixel turns black.\n",
    "\n",
    "### Yen algorithm\n",
    "-\timplements thresholding based on a maximum correlation criterion \n",
    "-\tmore computationally efficient alternative to entropy measures*\n",
    "\n",
    "### Li algorithm\n",
    "-\tminimises the cross-entropy* between the foreground and the background.\n",
    "\n",
    "### Minimum algorithm\n",
    "-\tassumes bimodal histogram\n",
    "-\thistogram is iteratively smoothed using a running average of size 3, until there are only two local maxima\n",
    "-\tthreshold t is such that that yt−1 > yt <= yt+1\n",
    "-\tnot suitable: images with histograms with extremely unequal peaks or a broad and flat valley\n",
    "\n",
    "### Isodata algorithm\n",
    "-\titerative procedure\n",
    "-\tdivides the image into object and background by taking an initial threshold\n",
    "-\taverages of the pixels at / below the threshold and pixels above are computed\n",
    "-\taverages of those two values are computed\n",
    "-\tthreshold is incremented\n",
    "-\tprocess is repeated until the threshold is larger than the composite average\n",
    "    o\tthreshold = (average background + average objects) /2\n",
    "\n",
    "### Otsu algorithm\n",
    "-\tSearches for the threshold that minimizes the intraclass variance, defined as a weighted sum of variances of the two classes\n",
    "\n",
    "### Triangle algorithm\n",
    "-\tGeometric method\n",
    "-\tCannot tell whether the data is skewed to one side or another\n",
    "-\tAssumes a maximum peak (mode) near one end of the histogram and searches towards the other end\n",
    "-\tProblems\n",
    "    o\tabsence of information of the type of image\n",
    "    o\tmaximum is not near one of the histogram extremes, resulting in two possible threshold regions between that max and the extremes\n",
    "-\tAlgorithm was extended to find on which side of the max peak the data goes the furthest and searches for the threshold within that largest range\n",
    "\n",
    "\n",
    "<i> *Entropy is a measure of image information content, which is interpreted as the average uncertainty of information source. In Image, Entropy is defined as corresponding states of intensity level which individual pixels can adapt. Example: a simple image having little information (low entropy) can be encoded with fewer bytes of data while completely random images (like white noise) cannot be compressed much. </i>\n",
    "\n",
    "\n",
    "# Thresholding methods\n",
    "\n",
    "### Global thresholding methods (histogram-derived) \n",
    "They analyse the peaks, valleys and curvatures of a smoothened histogram. This is the method that VSParticle uses.\n",
    "\n",
    "### Local thresholding methods \n",
    "The threshold is computed for each pixel according to the image characteristics within a window of radius r around it. \n",
    "\n",
    "### Automatic thresholding process\n",
    "1.\tSelect initial threshold value, typically the mean 8-bit value of the original image.\n",
    "2.\tDivide the original image into two portions;\n",
    "    a.\tPixel values that are less than or equal to the threshold; background\n",
    "    b.\tPixel values greater than the threshold; foreground\n",
    "3.\tFind the average mean values of the two new images\n",
    "4.\tCalculate the new threshold by averaging the two means.\n",
    "5.\tIf the difference between the previous threshold value and the new threshold value are below a specified limit, you are finished. Otherwise apply the new threshold to the original image keep trying.\n",
    "\n",
    "\n",
    "\n",
    "Sources\n",
    "https://imagej.net/Auto_Threshold \n",
    "https://scikit-image.org/docs/dev/auto_examples/developers/plot_threshold_li.html\n",
    "https://cran.r-project.org/web/packages/autothresholdr/vignettes/finding-thresholds.html"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
